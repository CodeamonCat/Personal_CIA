[{"/home/bacon/Desktop/web/src/index.js":"1","/home/bacon/Desktop/web/src/reportWebVitals.js":"2","/home/bacon/Desktop/web/src/App.js":"3","/home/bacon/Desktop/web/src/Containers/Landing.js":"4","/home/bacon/Desktop/web/src/Containers/Sign.js":"5","/home/bacon/Desktop/web/src/Containers/Dashboard.js":"6","/home/bacon/Desktop/web/src/Containers/NoMatch.js":"7","/home/bacon/Desktop/web/src/Containers/Session.js":"8"},{"size":627,"mtime":1682801456000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1682772816000,"results":"11","hashOfConfig":"10"},{"size":7195,"mtime":1682883980828,"results":"12","hashOfConfig":"10"},{"size":634,"mtime":1682869285869,"results":"13","hashOfConfig":"10"},{"size":1808,"mtime":1682833160000,"results":"14","hashOfConfig":"10"},{"size":4825,"mtime":1682890287769,"results":"15","hashOfConfig":"10"},{"size":154,"mtime":1682805100000,"results":"16","hashOfConfig":"10"},{"size":9688,"mtime":1682887544270,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"kdr31z",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"21"},"/home/bacon/Desktop/web/src/index.js",[],[],[],"/home/bacon/Desktop/web/src/reportWebVitals.js",[],[],"/home/bacon/Desktop/web/src/App.js",[],[],"/home/bacon/Desktop/web/src/Containers/Landing.js",[],[],"/home/bacon/Desktop/web/src/Containers/Sign.js",[],[],"/home/bacon/Desktop/web/src/Containers/Dashboard.js",["44","45","46","47","48","49"],[],"/home/bacon/Desktop/web/src/Containers/NoMatch.js",[],[],"/home/bacon/Desktop/web/src/Containers/Session.js",["50"],[],"import React, { useState } from \"react\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport { Link } from 'react-router-dom';\n\nimport \"./Session.css\";\n\nconst SearchForm = () => {\n    const [startDate, setStartDate] = useState(\"\");\n    const [endDate, setEndDate] = useState(\"\");\n    const [numberOfAttempts, setNumberOfAttempts] = useState(1);\n    const [businessType, setBusinessType] = useState([]);\n    const [businessDescription, setBusinessDescription] = useState(\"\");\n    const [geoLocation, setGeoLocation] = useState(\"\");\n    const [ageGroup, setAgeGroup] = useState(\"\");\n    const [incomeGroup, setIncomeGroup] = useState(\"\");\n    const [fieldIndustry, setFieldIndustry] = useState(\"\");\n    const [researchType, setResearchType] = useState([]);\n\n    const handleCheckboxChange = (event, setter) => {\n        if (event.target.checked) {\n            setter(prevState => [...prevState, event.target.value]);\n        } else {\n            setter(prevState => prevState.filter(value => value !== event.target.value));\n        }\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        // Prepare form data\n        const formData = {\n        // should be changed to the data we need below\n          startDate,\n          endDate,\n          numberOfAttempts,\n          businessType,\n          businessDescription,\n          geoLocation,\n          ageGroup,\n          incomeGroup,\n          fieldIndustry,\n          researchType,\n        };\n      \n        try {\n          // Send POST request to your Flask backend\n          const response = await fetch('http://localhost:5000/', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n          });\n      \n          // Handle the response from the server\n          if (response.ok) {\n            const responseData = await response.json();\n            console.log(responseData);\n          } else {\n            console.error('Error submitting form:', response.statusText);\n          }\n        } catch (error) {\n          console.error('Error submitting form:', error);\n        }\n      };\n\n    return (\n        <form onSubmit={handleSubmit} style={{ marginTop: '2%', marginLeft: '2%', marginRight: '2%' }}>\n            <div className=\"row\">\n                <div className=\"column\">\n                    <label htmlFor=\"search-timeframe\" style={{ display: \"inline-block\", marginRight: \"0.5em\" }}>Search Timeframe:</label>\n                </div>\n                <div className=\"column\">\n                    <label htmlFor=\"search-timeframe\" style={{ display: \"inline-block\", marginRight: \"0.5em\" }}>Start</label>\n                    <input type=\"date\" id=\"start-date\" style={{ display: \"inline-block\", width: \"auto\" }} value={startDate} onChange={e => setStartDate(e.target.value)} />\n                </div>\n                <div className=\"column\">\n                    <label htmlFor=\"search-timeframe\" style={{ display: \"inline-block\", marginRight: \"0.5em\" }}>End</label>\n                    <input type=\"date\" id=\"end-date\" style={{ display: \"inline-block\", width: \"auto\" }} value={endDate} onChange={e => setEndDate(e.target.value)} />\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"column\">\n                    <label htmlFor=\"number-of-attempts\" className=\"sub-header\">Number of Attempts<span className=\"red-asterisk\">*</span></label>\n                    <div className=\"number-of-attempts-row\">\n                        <input type=\"number\" id=\"number-of-attempts\" value={numberOfAttempts} required className=\"number-of-attempts-input\" onChange={e => setNumberOfAttempts(e.target.value)} />\n                        <span>0 = unlimited</span>\n                    </div>\n                </div>\n                <div className=\"vertical-line\">\n                    <div className=\"column\" style={{ textAlign: \"right\" }}>\n                        <label htmlFor=\"business-type\" className=\"sub-header\">Business Type</label>\n                        <div>\n                            <label>\n                                <input type=\"checkbox\" name=\"business-type\" value=\"B2B\" onChange={e => handleCheckboxChange(e, setBusinessType)} />\n                                B2B\n                            </label>\n                            <label>\n                                <input type=\"checkbox\" name=\"business-type\" value=\"B2C\" onChange={e => handleCheckboxChange(e, setBusinessType)} />\n                                B2C\n                            </label>\n                            <label>\n                                <input type=\"checkbox\" name=\"business-type\" value=\"P2P\" onChange={e => handleCheckboxChange(e, setBusinessType)} />\n                                P2P\n                            </label>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <label htmlFor=\"business-description\" className=\"sub-header\">Tell us about your business in 1-2 sentences<span className=\"red-asterisk\">*</span></label>\n            <textarea id=\"business-description\" rows=\"4\" placeholder=\"An app that helps people find and book last-minute hotel rooms at discounted rates\" required value={businessDescription} onChange={e => setBusinessDescription(e.target.value)}></textarea>\n\n            <label htmlFor=\"geo-location\" className=\"sub-header\">Business Focus</label>\n            <div className=\"row\">\n                <div className=\"column\">\n                    <select id=\"geo-location\" required value={geoLocation} onChange={e => setGeoLocation(e.target.value)}>\n                        <option value=\"\">Geo Location</option>\n                        <option value=\"option1\">Option 1</option>\n                        <option value=\"option2\">Option 2</option>\n                        <option value=\"option3\">Option 3</option>\n                    </select>\n                    <select id=\"age-group\" required value={ageGroup} onChange={e => setAgeGroup(e.target.value)}>\n                        <option value=\"\">Age Group</option>\n                        <option value=\"option1\">Option 1</option>\n                        <option value=\"option2\">Option 2</option>\n                        <option value=\"option3\">Option 3</option>\n                    </select>\n                </div>\n                <div className=\"column\">\n                    <select id=\"income-group\" required value={incomeGroup} onChange={e => setIncomeGroup(e.target.value)}>\n                        <option value=\"\">Income Group</option>\n                        <option value=\"option1\">Option 1</option>\n                        <option value=\"option2\">Option 2</option>\n                        <option value=\"option3\">Option 3</option>\n                    </select>\n                    <select id=\"field-industry\" required value={fieldIndustry} onChange={e => setFieldIndustry(e.target.value)}>\n                        <option value=\"\">Field/Industry</option>\n                        <option value=\"option1\">Option 1</option>\n                        <option value=\"option2\">Option 2</option>\n                        <option value=\"option3\">Option 3</option>\n                    </select>\n                </div>\n            </div>\n\n            <label htmlFor=\"research-type\" className=\"sub-header\">Research Type<span className=\"red-asterisk\">*</span></label>\n            <div className=\"checkbox-grid\">\n                <label>\n                    <input type=\"checkbox\" name=\"research-type\" value=\"Market Size/Potential\" required onChange={e => handleCheckboxChange(e, setResearchType)} />\n                    Market Size/Potential\n                </label>\n                <label>\n                    <input type=\"checkbox\" name=\"research-type\" value=\"Market Segments\" onChange={e => handleCheckboxChange(e, setResearchType)} />\n                    Market Segments\n                </label>\n                <label>\n                    <input type=\"checkbox\" name=\"research-type\" value=\"Product Marketing\" onChange={e => handleCheckboxChange(e, setResearchType)} />\n                    Product Marketing\n                </label>\n                <br />\n                <label>\n                    <input type=\"checkbox\" name=\"research-type\" value=\"Competitors\" onChange={e => handleCheckboxChange(e, setResearchType)} />\n                    Competitors\n                </label>\n                <label>\n                    <input type=\"checkbox\" name=\"research-type\" value=\"Customer Segments\" onChange={e => handleCheckboxChange(e, setResearchType)} />\n                    Customer Segments\n                </label>\n                <label>\n                    <input type=\"checkbox\" name=\"research-type\" value=\"Market/Industry Trends\" onChange={e => handleCheckboxChange(e, setResearchType)} />\n                    Market/Industry Trends\n                </label>\n                <label>\n                    <input type=\"checkbox\" name=\"research-type\" value=\"Target Audience\" onChange={e => handleCheckboxChange(e, setResearchType)} />\n                    Target Audience\n                </label>\n            </div>\n\n            <button type=\"submit\" className=\"start-search-btn\">Start Search</button>\n            <div className=\"nav\">\n                <Button\n                    variant=\"contained\"\n                    color=\"info\"\n                    style={{ textTransform: 'none' }}\n                    component={Link} to=\"../Dashboard\"\n                >\n                    Back to Dashboard\n                </Button>\n            </div>\n\n        </form>\n\n    );\n\n};\n\nexport default SearchForm;",{"ruleId":"51","severity":1,"message":"52","line":10,"column":10,"nodeType":"53","messageId":"54","endLine":10,"endColumn":16},{"ruleId":"51","severity":1,"message":"55","line":10,"column":18,"nodeType":"53","messageId":"54","endLine":10,"endColumn":23},{"ruleId":"51","severity":1,"message":"56","line":54,"column":9,"nodeType":"53","messageId":"54","endLine":54,"endColumn":19},{"ruleId":"51","severity":1,"message":"57","line":57,"column":9,"nodeType":"53","messageId":"54","endLine":57,"endColumn":19},{"ruleId":"51","severity":1,"message":"58","line":62,"column":10,"nodeType":"53","messageId":"54","endLine":62,"endColumn":14},{"ruleId":"51","severity":1,"message":"59","line":64,"column":9,"nodeType":"53","messageId":"54","endLine":64,"endColumn":16},{"ruleId":"51","severity":1,"message":"60","line":2,"column":18,"nodeType":"53","messageId":"54","endLine":2,"endColumn":29},"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'handleOpen' is assigned a value but never used.","'newSession' is assigned a value but never used.","'text' is assigned a value but never used.","'getText' is assigned a value but never used.","'ButtonGroup' is defined but never used."]